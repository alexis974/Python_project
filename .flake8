[flake8]

#################################################################### PROGRAM ###

# Specify the number of subprocesses that
# Flake8 will use to run checks in parallel.
jobs = auto

################################################################# FORMATTING ###

# Select the formatter used to display errors to the user.
format = pylint

# Print the total number of errors.
count = True
# Print the source code generating the error/warning in question.
show-source = False
# Count the number of occurrences of each
# error/warning code and print a report.
statistics = True

#################################################################### TARGETS ###

# Redirect all output to the specified file.
output-file = .flake8.log
# Also print output to stdout if output-file has been configured.
tee = True

############################################################## FILE PATTERNS ###

# Provide a comma-separated list of glob patterns to exclude from checks.
exclude =
    # git folder
    .git,
    # python cache
    __pycache__,
    # virtual env
    venv,
# Provide a comma-separate list of glob patterns to include for checks.
filename = *.py

#################################################################### LINTING ###

######################################################3######### ENVIRONMENT ###

# Provide a custom list of builtin functions, objects, names, etc.
builtins =

#################################################################### OPTIONS ###

# Report all errors, even if it is on the same line as a `# NOQA` comment.
disable-noqa = False

# Set the maximum length that any line (with some exceptions) may be.
max-line-length = 100
# Set the length of indent.
indent-size = 4
# Set the maximum allowed McCabe complexity value for a block of code.
max-complexity = 12
# Toggle whether pycodestyle should enforce matching
# the indentation of the opening bracketâ€™s line.
# incluences E131 and E133
hang-closing = True

###################################################################### RULES ###

# Enable off-by-default extensions.
enable-extensions =

# ERROR CODES
#
# E/W  - PEP8 errors/warnings (pycodestyle)
# F    - linting errors (pyflakes)
# C    - McCabe complexity error (mccabe)
# D    - Documentation errors/warnings (pydocstyle)
# I    - ISORT plugin
# N    - Naming plugin

# Specify a list of codes to ignore.
# [W503] : Line break occurred before a binary operator
# [EXE001] : Shebang is present but the file is not executable.

ignore = W503, EXE001

# Specify the list of error codes you wish Flake8 to report.
select =
    E,
    W,
    F,
    C,
    I,
    N,

################################################################## DOCSTRING ###

# Enable PyFlakes syntax checking of doctests in docstrings.
doctests = True

# Specify which files are checked by PyFlakes for doctest syntax.
include-in-doctest =
# Specify which files are not to be checked by PyFlakes for doctest syntax.
exclude-in-doctest =

[isort]
reverse_relative = True
force_alphabetical_sort = True
case_sensitive = False
